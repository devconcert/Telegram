buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    compile 'com.android.support:support-v4:22.1.+'
    compile 'com.google.android.gms:play-services:3.2.+'
    compile 'com.googlecode.mp4parser:isoparser:1.0.+'
    compile project(':TTalkSDK')
    compile project(':EmoticonSDK')
    compile project(':AppCompat')
}


def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyMMdd')
    return formattedDate
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        debug {
            storeFile file("config/debug.keystore")
        }

        release {
            storeFile file("config/release.keystore")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
        }

        foss {
            debuggable false
            jniDebuggable false
            signingConfig signingConfigs.release
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'libs'
        jni.srcDirs = [] //disable automatic ndk-build call
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest.xml'
    }

    sourceSets.release {
        manifest.srcFile 'config/release/AndroidManifest.xml'
    }

    sourceSets.foss {
        manifest.srcFile 'config/foss/AndroidManifest.xml'
    }

    lintOptions {
        abortOnError false
        warning 'InvalidPackage'
    }

    defaultConfig {
        applicationId "org.telegramkr.messenger"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 543
        versionName "2.9.1.1"
    }
/*
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                output.outputFile = new File(outputFile.parent,
                        getDate() + "_"
                        + "TelegramTalk_${variant.name}_"
                        + defaultConfig.versionName + "_"
                        + defaultConfig.versionCode
                        + ".apk")
            }
        }
    }
*/
}